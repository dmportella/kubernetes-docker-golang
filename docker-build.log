Sending build context to Docker daemon 557.1 kBSending build context to Docker daemon 1.114 MBSending build context to Docker daemon 1.671 MBSending build context to Docker daemon 2.228 MBSending build context to Docker daemon 2.785 MBSending build context to Docker daemon 3.342 MBSending build context to Docker daemon 3.899 MBSending build context to Docker daemon 4.456 MBSending build context to Docker daemon 5.014 MBSending build context to Docker daemon 5.571 MBSending build context to Docker daemon 6.128 MBSending build context to Docker daemon 6.685 MBSending build context to Docker daemon 7.242 MBSending build context to Docker daemon 7.609 MB
Step 1 : FROM ubuntu:14.04
 ---> e17b56e5200a
Step 2 : MAINTAINER Daniel Portella
 ---> Using cache
 ---> f1e464cc74c9
Step 3 : LABEL version 1.0.0
 ---> Using cache
 ---> 1995eddc50f3
Step 4 : LABEL description Go process example for docker.
 ---> Using cache
 ---> f826497ed227
Step 5 : RUN mkdir api
 ---> Using cache
 ---> 90cef4ebecb5
Step 6 : ADD hotel-api /api/
 ---> Using cache
 ---> 8cb811c420c2
Step 7 : RUN chmod +x /api/hotel-api
 ---> Using cache
 ---> 2de271b1fa0f
Step 8 : ENV ENVIRONMENT development
 ---> Using cache
 ---> 496bbeae65a2
Step 9 : ENV BINDING :8080
 ---> Using cache
 ---> a67e3e45038b
Step 10 : WORKDIR /api
 ---> Using cache
 ---> 8c41b3fb9584
Step 11 : RUN groupadd -r gogroup -g 433 && 	useradd -u 431 -r -g gogroup -d /api -s /sbin/nologin -c "go image user" go-user && 	chown -R go-user /api &&     chmod -R 774 /api
 ---> Using cache
 ---> 35beeafe5b42
Step 12 : USER go-user
 ---> Using cache
 ---> 243ffd6d4981
Step 13 : EXPOSE 8080
 ---> Using cache
 ---> 8459c63027d4
Step 14 : ENTRYPOINT /api/hotel-api
 ---> Using cache
 ---> 77d377368529
Successfully built 77d377368529
